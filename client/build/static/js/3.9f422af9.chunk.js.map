{"version":3,"sources":["Components/Business/BusinessDetail.js"],"names":["BusinessDetail","state","useContext","GlobalState","params","useParams","user","UserAPI","User","businesses","BusinessAPI","useState","business","setBusiness","branchs","branchAPI","UsersAPI","users","allSales","SalesAPI","Sales","sales","setSales","MachineAPI","callback","setCallback","callbackBusiness","setCallbackBusiness","callbackSales","setCallbackSales","allMachines","machines","showRejectBusinessModal","setShowRejectBusinessModal","senderId","_id","receiverId","subject","theMessage","notification","setNotification","showAssigneMachineModal","setShowAssigneMachineModal","branch","businessId","id","machineId","status","assigneMachine","setAssigneMachine","useEffect","bsns","filter","filteredBusiness","ownerID","bsnsSales","filteredSale","SweetAlert","type","text","Swal","fire","position","background","icon","confirmButtonColor","showConfirmButton","rejectBusinessCredentails","e","a","preventDefault","axios","put","res","data","msg","response","onSubmitAssigneMachine","post","className","sm","md","height","src","alt","businessName","companyName","TIN","VAT","machine","credentials","userRole","color","size","onClick","title","showCancelButton","cancelButtonColor","confirmButtonText","then","result","isConfirmed","error","AccepteBusinessCredentials","name","variant","lg","city","subCity","kebele","woreda","buildingName","officeNumber","telephone","email","fax","filteredUser","map","owner","to","fName","mName","phoneNumber","length","sale","saleId","sw_Tech","filteredBranch","branchName","TL_Image","show","onClose","onSubmit","htmlFor","onChange","target","value","rows","placeholder","required","event","filteredMachine","salesStatus","thisMachine","serialNumber","brand"],"mappings":"wRA0feA,UA5df,WACE,IAAMC,EAAQC,qBAAWC,KACnBC,EAASC,cACRC,EAAP,YAAeL,EAAMM,QAAQC,KAA7B,MACOC,EAAP,YAAqBR,EAAMS,YAAYD,WAAvC,MACA,EAAgCE,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACOC,EAAP,YAAkBb,EAAMc,UAAUD,QAAlC,MACA,cAA0Bb,EAAMe,SAASC,MAAzC,GAAOA,EAAP,KACOC,GADP,KACA,YAAmBjB,EAAMkB,SAASC,MAAlC,OACA,EAA0BT,mBAASO,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,cAAgCrB,EAAMsB,WAAWC,SAAjD,GAAOA,EAAP,KAAiBC,EAAjB,KACA,cAAgDxB,EAAMS,YAAYc,SAAlE,GAAOE,EAAP,KAAyBC,EAAzB,KACA,cAA0C1B,EAAMkB,SAASK,SAAzD,GAAOI,EAAP,KAAsBC,EAAtB,KACOC,EAAP,YAAsB7B,EAAMsB,WAAWQ,SAAvC,MACA,EAA8BpB,mBAAS,IAAvC,mBAEA,GAFA,UAE8DA,oBAAS,IAAvE,mBAAOqB,EAAP,KAAgCC,EAAhC,KACA,EAAwCtB,mBAAS,CAC/CuB,SAAU5B,EAAK6B,IACfC,WAAY,GACZC,QAAS,YACTC,WAAY,KAJd,mBAAOC,EAAP,KAAqBC,EAArB,KAOA,EAA8D7B,oBAAS,GAAvE,mBAAO8B,EAAP,KAAgCC,EAAhC,KACA,EAA4C/B,mBAAS,CACnDgC,OAAQrC,EAAKqC,OACbC,WAAYxC,EAAOyC,GACnBC,UAAW,GACXC,OAAQ,KAJV,oBAAOC,GAAP,MAAuBC,GAAvB,MAOAC,qBAAU,WACR,GAAI9C,EAAOyC,GAAI,CACb,IAAIM,EAAO1C,EAAW2C,QACpB,SAACC,GAAD,OAAsBA,EAAiBlB,MAAQ/B,EAAOyC,MAExDhC,EAAYsC,EAAK,IACjBX,EAAgB,CACdN,SAAU5B,EAAK6B,IACfC,WAAYe,EAAK,GAAGG,QACpBjB,QAAS,YACTC,WAAY,KAEd,IAAIiB,EAAYrC,EAASkC,QACvB,SAACI,GAAD,OAAkBA,EAAaZ,aAAexC,EAAOyC,MAGvDvB,EAASiC,QAET1C,EAAY,IACZS,EAAS,MAEV,CAACb,EAAYS,EAAUd,EAAOyC,KAEjC,IAAMY,GAAa,SAACC,EAAMC,GACxBC,IAAKC,KAAK,CACRC,SAAU,SACVC,WAAY,UACZC,KAAMN,EACNC,KAAMA,EACNM,mBAAoB,UACpBC,mBAAmB,KA6BjBC,GAAyB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DAChCD,EAAEE,iBAD8B,kBAGZC,IAAMC,IAAN,2BAA8B5D,EAASuB,KAAvC,eACbI,IAJyB,OAGxBkC,EAHwB,OAM9B9C,GAAqBD,GACrBO,GAA4BD,GAC5ByB,GAAW,UAAWgB,EAAIC,KAAKC,KARD,kDAU9BlB,GAAW,QAAS,KAAMmB,SAASF,KAAKC,KAVV,0DAAH,sDAazBE,GAAsB,uCAAG,WAAOT,GAAP,eAAAC,EAAA,6DAC7BD,EAAEE,iBAD2B,kBAGTC,IAAMO,KAAK,sBAAX,eACb9B,KAJsB,OAGrByB,EAHqB,OAM3BhD,GAAaD,GACbG,GAAqBD,GACrBG,GAAkBD,GAClB6B,GAAW,UAAWgB,EAAIC,KAAKC,KATJ,kDAW3BlB,GAAW,QAAS,KAAMmB,SAASF,KAAKC,KAXb,0DAAH,sDAe5B,OACE,mCACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAMI,UAAU,OAAhB,UACE,cAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,IAAIF,UAAU,gCAA/B,SACE,cAAC,IAAD,CACEA,UAAU,aACVG,OAAO,MACPC,IAAI,wBACJC,IAAI,mBAGR,eAAC,IAAD,CAAMJ,GAAG,IAAIC,GAAG,IAAIF,UAAU,OAA9B,UACE,uBACA,8BACE,mDADF,IACkCnE,EAASyE,gBAE3C,8BACE,mDADF,IACkCzE,EAAS0E,eAE3C,8BACE,0CADF,IACyB1E,EAAS2E,OAElC,8BACE,0CADF,IACyB3E,EAAS4E,UAGpC,eAAC,IAAD,CAAMR,GAAG,IAAIC,GAAG,IAAIF,UAAU,OAA9B,UACE,uBACA,8BACE,8CADF,IAC6BnE,EAAS6E,WAEtC,8BACE,kDADF,IACiC7E,EAAS8E,eAEvB,iBAAlBpF,EAAKqF,UACJ,qCACG,IACyB,YAAzB/E,EAAS8E,aACR,uBAAMX,UAAU,iCAAhB,UACE,eAAC,IAAD,CACEa,MAAM,OACNC,KAAK,KACLd,UAAU,YACVe,QAAS,YA9FI,SAAClD,GAClC,IACEgB,IAAKC,KAAK,CACRkC,MAAO,WACPpC,KAAM,oEACNK,KAAM,UACNgC,kBAAkB,EAClB/B,mBAAoB,UACpBgC,kBAAmB,OACnBC,kBAAmB,qBAClBC,KARH,uCAQQ,WAAOC,GAAP,eAAA/B,EAAA,0DACF+B,EAAOC,YADL,gCAEc9B,IAAMC,IAAN,4BAA+B5B,IAF7C,OAEE6B,EAFF,OAGJ9C,GAAqBD,GACrBkC,IAAKC,KAAK,YAAaY,EAAIC,KAAKC,IAAK,WAJjC,2CARR,uDAeA,MAAO2B,GACP7C,GAAW,QAAS6C,EAAM1B,SAASF,KAAKC,MA6EpB4B,CAA2B3F,EAASuB,MALxC,UAQE,cAAC,IAAD,CAAOqE,KAAK,qBARd,aAUA,eAAC,IAAD,CACEV,QAAS,WACP7D,GAA4BD,IAE9B4D,MAAM,SACNC,KAAK,KACLd,UAAU,YANZ,UAQE,cAAC,IAAD,CAAOyB,KAAK,UARd,mBAeW,UAAlBlG,EAAKqF,UACqB,aAAzB/E,EAAS8E,aACY,eAArB9E,EAAS6E,SACP,cAAC,IAAD,CACEK,QAAS,WACPpD,GAA4BD,IAE9BmD,MAAM,OACNC,KAAK,KACLd,UAAU,QANZ,mCAaR,eAAC,KAAD,WACE,eAAC,IAAD,CAAM0B,QAAQ,OAAd,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOD,KAAK,qBADd,gBAKF,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOA,KAAK,gBADd,mBAIF,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOA,KAAK,oBADd,gBAIF,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOA,KAAK,eADd,wBAKJ,eAAC,KAAD,CAAazB,UAAU,OAAvB,UACE,cAAC,KAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,IAAIyB,GAAG,IAAI3B,UAAU,OAAtC,UACE,kDACA,uBACA,uBAAMA,UAAU,iCAAhB,UACE,2CADF,IAC0BnE,EAAS+F,QAEnC,uBAAM5B,UAAU,iCAAhB,UACE,+CADF,IAC8BnE,EAASgG,WAEvC,uBAAM7B,UAAU,iCAAhB,UACE,6CADF,IAC4BnE,EAASiG,UAErC,uBAAM9B,UAAU,iCAAhB,UACE,6CADF,IAC4BnE,EAASkG,UAErC,uBAAM/B,UAAU,iCAAhB,UACE,oDADF,IACmCnE,EAASmG,gBAE5C,uBAAMhC,UAAU,iCAAhB,UACE,oDADF,IACmCnE,EAASoG,mBAG9C,eAAC,IAAD,CAAMhC,GAAG,IAAIC,GAAG,IAAIyB,GAAG,IAAI3B,UAAU,OAArC,UACE,mDACA,uBAAU,IACV,uBAAMA,UAAU,iCAAhB,UACE,gDACCnE,EAASqG,aAEZ,uBAAMlC,UAAU,iCAAhB,UACE,4CADF,IAC2BnE,EAASsG,SAEpC,uBAAMnC,UAAU,iCAAhB,UACE,0CADF,IACyBnE,EAASuG,eAKxC,cAAC,KAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAMnC,GAAG,KAAKC,GAAG,IAAIyB,GAAG,IAAI3B,UAAU,OAAtC,UACE,oBAAIA,UAAU,aAAd,4BACA,uBACC9D,EACEmC,QACC,SAACgE,GAAD,OAAkBA,EAAajF,MAAQvB,EAAS0C,WAEjD+D,KAAI,SAACC,GAAD,OACH,gCACE,uBAAMvC,UAAU,iCAAhB,UACE,iDAA6B,IAC7B,eAAC,IAAD,CAAOwC,GAAE,yBAAoBD,EAAMnF,KAAnC,UACGmF,EAAME,MADT,IACiBF,EAAMG,YAGzB,uBAAM1C,UAAU,iCAAhB,UACE,4CADF,IAC2BuC,EAAMI,eAEjC,uBAAM3C,UAAU,iCAAhB,UACE,4CADF,IAC2BuC,EAAMJ,SAEjC,uBAAMnC,UAAU,iCAAhB,UACE,qDADF,IACoCuC,EAAMvE,YAdlCuE,EAAMnF,WAmBtB,eAAC,IAAD,CAAM6C,GAAG,KAAKC,GAAG,IAAIyB,GAAG,IAAI3B,UAAU,OAAtC,UACE,oBAAIA,UAAU,aAAd,4BACA,uBACA,uBAAMA,UAAU,iCAAhB,UACE,8CADF,IAC6BnE,EAAS6E,WAEpB,IAAjBpE,EAAMsG,QACL,qCACGtG,EAAMgG,KAAI,SAACO,GAAD,OACT,gCACwB,aAArBhH,EAAS6E,UACW,WAAlBnF,EAAKqF,UACc,UAAlBrF,EAAKqF,WACL,cAAC,IAAD,CACEc,QAAQ,QACRb,MAAM,SACNC,KAAK,KACLd,UAAU,aACVwC,GAAE,mCAA8BK,EAAKC,QALvC,4CAUkB,cAArBjH,EAAS6E,SACU,iBAAlBnF,EAAKqF,UACH,cAAC,IAAD,CACEc,QAAQ,QACRb,MAAM,UACNC,KAAK,KACLd,UAAU,aAJZ,8BAhBI6C,EAAKC,WA0Bb,UAIV,eAAC,IAAD,CAAM7C,GAAG,KAAKC,GAAG,IAAIyB,GAAG,IAAI3B,UAAU,OAAtC,UACE,oBAAIA,UAAU,aAAd,+BACA,uBACA,uBAAMA,UAAU,iCAAhB,UACE,iDADF,IACgCnE,EAASkH,cAG3C,eAAC,IAAD,CAAM9C,GAAG,KAAKC,GAAG,IAAIyB,GAAG,IAAI3B,UAAU,OAAtC,UACE,oBAAIA,UAAU,aAAd,oBACA,uBACCjE,EACEsC,QACC,SAAC2E,GAAD,OACEA,EAAe5F,MAAQvB,EAAS+B,UAEnC0E,KAAI,SAAC1E,GAAD,OACH,gCACE,uBAAMoC,UAAU,iCAAhB,UACE,kDADF,IACiCpC,EAAOqF,cAExC,uBAAMjD,UAAU,iCAAhB,UACE,2CADF,IAC0BpC,EAAOgE,QAEjC,uBAAM5B,UAAU,iCAAhB,UACE,gDADF,IAC+BpC,EAAOsE,aAEtC,uBAAMlC,UAAU,iCAAhB,UACE,4CADF,IAC2BpC,EAAOuE,WAX1BvE,EAAOR,gBAkB3B,cAAC,KAAD,UACE,cAAC,IAAD,CACE4C,UAAU,QACVI,IAAKvE,EAASqH,SACd7C,IAAKxE,EAASyE,0BAQxB,cAAC,IAAD,CACE6C,KAAMlG,EACNmG,QAAS,kBAAMlG,GAA4BD,IAF7C,SAIE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOoG,SAAUjE,GAAjB,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQkE,QAAQ,iBAAhB,0BACA,cAAC,KAAD,CACExF,GAAG,aACH2D,KAAK,aACL8B,SArUM,SAAClE,GACrB,MAAwBA,EAAEmE,OAAlB/B,EAAR,EAAQA,KAAMgC,EAAd,EAAcA,MACdhG,EAAgB,2BAAKD,GAAN,kBAAqBiE,EAAOgC,MAoU7BC,KAAK,IACLC,YAAY,wDACZC,UAAQ,OAGZ,eAAC,IAAD,CAAM5D,UAAU,sCAAhB,UACE,eAAC,IAAD,CAASrB,KAAK,SAASmC,KAAK,KAAKY,QAAQ,UAAUb,MAAM,OAAzD,UACE,cAAC,IAAD,CAAOY,KAAK,qBADd,wBAGA,eAAC,IAAD,CACEX,KAAK,KACLY,QAAQ,UACRb,MAAM,SACNE,QAAS,kBACP7D,GAA4BD,IALhC,UAQE,cAAC,IAAD,CAAOwE,KAAK,UARd,sBAgBR,cAAC,IAAD,CACE0B,KAAMzF,EACN0F,QAAS,kBAAMzF,GAA4BD,IAF7C,SAIE,eAAC,IAAD,CAAO2F,SAAUvD,GAAwBE,UAAU,MAAnD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,2DACA,eAAC,IAAD,CACE,aAAW,yBACXlC,GAAG,YACH2F,MAAOxF,GAAeF,UACtBwF,SAAU,SAACM,GACT3F,GAAkB,2BACbD,IADY,IAEfF,UAAW8F,EAAML,OAAOC,UAG5BG,UAAQ,EAVV,UAYE,wBAAQH,MAAM,GAAd,gCACC1G,EACEsB,QACC,SAACyF,GAAD,OACmC,WAAhCA,EAAgBC,aACiB,aAAhCD,EAAgBC,cAClBD,EAAgBlG,QAAUrC,EAAKqC,UAElC0E,KAAI,SAAC0B,GAAD,OACH,yBAAQP,MAAOO,EAAY5G,IAA3B,qBACW4G,EAAYC,aADvB,YAC8C,IAC3CD,EAAYE,QAFsBF,EAAY5G,gBAQ3D,eAAC,IAAD,CAAM4C,UAAU,sCAAhB,UACE,eAAC,IAAD,CAASrB,KAAK,SAASmC,KAAK,KAAKY,QAAQ,UAAUb,MAAM,OAAzD,UACE,cAAC,IAAD,CAAOY,KAAK,qBADd,cAGA,eAAC,IAAD,CACEX,KAAK,KACLY,QAAQ,UACRb,MAAM,SACNE,QAAS,kBACPpD,GAA4BD,IALhC,UAQE,cAAC,IAAD,CAAO+D,KAAK,UARd","file":"static/js/3.9f422af9.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { GlobalState } from \"../../GlobalState\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CImg,\r\n  CRow,\r\n  CCol,\r\n  CNav,\r\n  CNavItem,\r\n  CNavLink,\r\n  CTabContent,\r\n  CTabPane,\r\n  CTabs,\r\n  CLink,\r\n  CModal,\r\n  CModalBody,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CTextarea,\r\n  CSelect,\r\n} from \"@coreui/react\";\r\n\r\nfunction BusinessDetail() {\r\n  const state = useContext(GlobalState);\r\n  const params = useParams();\r\n  const [user] = state.UserAPI.User;\r\n  const [businesses] = state.BusinessAPI.businesses;\r\n  const [business, setBusiness] = useState(\"\");\r\n  const [branchs] = state.branchAPI.branchs;\r\n  const [users, setUsers] = state.UsersAPI.users;\r\n  const [allSales] = state.SalesAPI.Sales;\r\n  const [sales, setSales] = useState(allSales);\r\n  const [callback, setCallback] = state.MachineAPI.callback;\r\n  const [callbackBusiness, setCallbackBusiness] = state.BusinessAPI.callback;\r\n  const [callbackSales, setCallbackSales] = state.SalesAPI.callback;\r\n  const [allMachines] = state.MachineAPI.machines;\r\n  const [ownerId, setOwnerId] = useState(\"\");\r\n\r\n  const [showRejectBusinessModal, setShowRejectBusinessModal] = useState(false);\r\n  const [notification, setNotification] = useState({\r\n    senderId: user._id,\r\n    receiverId: \"\",\r\n    subject: \"Rejection\",\r\n    theMessage: \"\",\r\n  });\r\n\r\n  const [showAssigneMachineModal, setShowAssigneMachineModal] = useState(false);\r\n  const [assigneMachine, setAssigneMachine] = useState({\r\n    branch: user.branch,\r\n    businessId: params.id,\r\n    machineId: \"\",\r\n    status: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (params.id) {\r\n      var bsns = businesses.filter(\r\n        (filteredBusiness) => filteredBusiness._id === params.id\r\n      );\r\n      setBusiness(bsns[0]);\r\n      setNotification({\r\n        senderId: user._id,\r\n        receiverId: bsns[0].ownerID,\r\n        subject: \"Rejection\",\r\n        theMessage: \"\",\r\n      });\r\n      var bsnsSales = allSales.filter(\r\n        (filteredSale) => filteredSale.businessId === params.id\r\n      );\r\n      // console.log(bsnsSales);\r\n      setSales(bsnsSales);\r\n    } else {\r\n      setBusiness(\"\");\r\n      setSales(\"\");\r\n    }\r\n  }, [businesses, allSales, params.id]);\r\n\r\n  const SweetAlert = (type, text) => {\r\n    Swal.fire({\r\n      position: \"center\",\r\n      background: \"#EBEDEF\", // 2EB85C success // E55353 danger // 1E263C sidebar\r\n      icon: type,\r\n      text: text,\r\n      confirmButtonColor: \"#1E263C\",\r\n      showConfirmButton: false,\r\n      // timer: 1500,\r\n    });\r\n  };\r\n  const onChangeInput = (e) => {\r\n    const { name, value } = e.target;\r\n    setNotification({ ...notification, [name]: value });\r\n  };\r\n  const AccepteBusinessCredentials = (businessId) => {\r\n    try {\r\n      Swal.fire({\r\n        title: \"Accepte?\",\r\n        text: \"Is the overall document is valid and you can assign it a machine!\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#1E263C\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, Accepte it!\",\r\n      }).then(async (result) => {\r\n        if (result.isConfirmed) {\r\n          const res = await axios.put(`/business/accepte/${businessId}`);\r\n          setCallbackBusiness(!callbackBusiness);\r\n          Swal.fire(\"Accepted!\", res.data.msg, \"success\");\r\n        }\r\n      });\r\n    } catch (error) {\r\n      SweetAlert(\"error\", error.response.data.msg);\r\n    }\r\n  };\r\n  const rejectBusinessCredentails = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.put(`/business/reject/${business._id}`, {\r\n        ...notification,\r\n      });\r\n      setCallbackBusiness(!callbackBusiness);\r\n      setShowRejectBusinessModal(!showRejectBusinessModal);\r\n      SweetAlert(\"success\", res.data.msg);\r\n    } catch (error) {\r\n      SweetAlert(\"error\", error.response.data.msg);\r\n    }\r\n  };\r\n  const onSubmitAssigneMachine = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(\"/machine/distribute\", {\r\n        ...assigneMachine,\r\n      });\r\n      setCallback(!callback);\r\n      setCallbackBusiness(!callbackBusiness);\r\n      setCallbackSales(!callbackSales);\r\n      SweetAlert(\"success\", res.data.msg);\r\n    } catch (error) {\r\n      SweetAlert(\"error\", error.response.data.msg);\r\n    }\r\n  };\r\n  // console.log(business)\r\n  return (\r\n    <>\r\n      <CCard>\r\n        <CCardBody>\r\n          <CRow className=\"mb-2\">\r\n            <CCol sm=\"12\" md=\"3\" className=\"d-flex justify-content-center\">\r\n              <CImg\r\n                className=\"shadow-sm \"\r\n                height=\"150\"\r\n                src=\"/Others/bsnsIcon1.png\"\r\n                alt=\"Business Img\"\r\n              />\r\n            </CCol>\r\n            <CCol sm=\"6\" md=\"6\" className=\"mt-1\">\r\n              <h6></h6>\r\n              <p>\r\n                <strong>Businss Name:</strong> {business.businessName}\r\n              </p>\r\n              <p>\r\n                <strong>Company Name:</strong> {business.companyName}\r\n              </p>\r\n              <p>\r\n                <strong>TIN:</strong> {business.TIN}\r\n              </p>\r\n              <p>\r\n                <strong>VAT:</strong> {business.VAT}\r\n              </p>\r\n            </CCol>\r\n            <CCol sm=\"6\" md=\"3\" className=\"mt-1\">\r\n              <h6></h6>\r\n              <p>\r\n                <strong>Machine:</strong> {business.machine}\r\n              </p>\r\n              <p>\r\n                <strong>Credentials:</strong> {business.credentials}\r\n              </p>\r\n              {user.userRole === \"branch-admin\" && (\r\n                <>\r\n                  {\" \"}\r\n                  {business.credentials === \"Pending\" && (\r\n                    <span className=\"d-flex justify-content-between\">\r\n                      <CButton\r\n                        color=\"dark\"\r\n                        size=\"sm\"\r\n                        className=\"mr-1 w-50\"\r\n                        onClick={() => {\r\n                          AccepteBusinessCredentials(business._id);\r\n                        }}\r\n                      >\r\n                        <CIcon name=\"cil-check-circle\" /> Accept\r\n                      </CButton>\r\n                      <CButton\r\n                        onClick={() => {\r\n                          setShowRejectBusinessModal(!showRejectBusinessModal);\r\n                        }}\r\n                        color=\"danger\"\r\n                        size=\"sm\"\r\n                        className=\"ml-1 w-50\"\r\n                      >\r\n                        <CIcon name=\"cil-x\" /> Reject\r\n                      </CButton>\r\n                    </span>\r\n                  )}\r\n                </>\r\n              )}\r\n\r\n              {user.userRole === \"sales\" &&\r\n                business.credentials === \"Accepted\" &&\r\n                business.machine === \"unassigned\" && (\r\n                  <CButton\r\n                    onClick={() => {\r\n                      setShowAssigneMachineModal(!showAssigneMachineModal);\r\n                    }}\r\n                    color=\"dark\"\r\n                    size=\"sm\"\r\n                    className=\"w-100\"\r\n                  >\r\n                    Assigne Machine\r\n                  </CButton>\r\n                )}\r\n            </CCol>\r\n          </CRow>\r\n          <CTabs>\r\n            <CNav variant=\"tabs\">\r\n              <CNavItem>\r\n                <CNavLink>\r\n                  <CIcon name=\"cil-location-pin\"></CIcon> Address\r\n                </CNavLink>\r\n              </CNavItem>\r\n\r\n              <CNavItem>\r\n                <CNavLink>\r\n                  <CIcon name=\"cil-options\"></CIcon> References\r\n                </CNavLink>\r\n              </CNavItem>\r\n              <CNavItem>\r\n                <CNavLink>\r\n                  <CIcon name=\"cil-spreadsheet\"></CIcon> license\r\n                </CNavLink>\r\n              </CNavItem>\r\n              <CNavItem>\r\n                <CNavLink>\r\n                  <CIcon name=\"cil-memory\"></CIcon> Certificates\r\n                </CNavLink>\r\n              </CNavItem>\r\n            </CNav>\r\n            <CTabContent className=\"my-3\">\r\n              <CTabPane>\r\n                <CRow>\r\n                  <CCol sm=\"12\" md=\"6\" lg=\"5\" className=\"mt-1\">\r\n                    <h6>Business Address</h6>\r\n                    <hr></hr>\r\n                    <span className=\"d-flex justify-content-between\">\r\n                      <strong>City:</strong> {business.city}\r\n                    </span>\r\n                    <span className=\"d-flex justify-content-between\">\r\n                      <strong>Sub City:</strong> {business.subCity}\r\n                    </span>\r\n                    <span className=\"d-flex justify-content-between\">\r\n                      <strong>Kebele:</strong> {business.kebele}\r\n                    </span>\r\n                    <span className=\"d-flex justify-content-between\">\r\n                      <strong>Woreda:</strong> {business.woreda}\r\n                    </span>\r\n                    <span className=\"d-flex justify-content-between\">\r\n                      <strong>Building Name:</strong> {business.buildingName}\r\n                    </span>\r\n                    <span className=\"d-flex justify-content-between\">\r\n                      <strong>Office Number:</strong> {business.officeNumber}\r\n                    </span>\r\n                  </CCol>\r\n                  <CCol sm=\"6\" md=\"6\" lg=\"5\" className=\"mt-1\">\r\n                    <h6>Business Contacts</h6>\r\n                    <hr></hr>{\" \"}\r\n                    <span className=\"d-flex justify-content-between\">\r\n                      <strong>Telephone:</strong>\r\n                      {business.telephone}\r\n                    </span>\r\n                    <span className=\"d-flex justify-content-between\">\r\n                      <strong>Email:</strong> {business.email}\r\n                    </span>\r\n                    <span className=\"d-flex justify-content-between\">\r\n                      <strong>Fax:</strong> {business.fax}\r\n                    </span>\r\n                  </CCol>\r\n                </CRow>\r\n              </CTabPane>\r\n              <CTabPane>\r\n                <CRow>\r\n                  <CCol sm=\"12\" md=\"4\" lg=\"3\" className=\"mt-1\">\r\n                    <h6 className=\"text-muted\">Business Owner</h6>\r\n                    <hr></hr>\r\n                    {users\r\n                      .filter(\r\n                        (filteredUser) => filteredUser._id === business.ownerID\r\n                      )\r\n                      .map((owner) => (\r\n                        <div key={owner._id}>\r\n                          <span className=\"d-flex justify-content-between\">\r\n                            <strong>Owner name:</strong>{\" \"}\r\n                            <CLink to={`/client/detail/${owner._id}`}>\r\n                              {owner.fName} {owner.mName}\r\n                            </CLink>\r\n                          </span>\r\n                          <span className=\"d-flex justify-content-between\">\r\n                            <strong>Phone:</strong> {owner.phoneNumber}\r\n                          </span>\r\n                          <span className=\"d-flex justify-content-between\">\r\n                            <strong>email:</strong> {owner.email}\r\n                          </span>\r\n                          <span className=\"d-flex justify-content-between\">\r\n                            <strong>Account Status:</strong> {owner.status}\r\n                          </span>\r\n                        </div>\r\n                      ))}\r\n                  </CCol>\r\n                  <CCol sm=\"12\" md=\"4\" lg=\"3\" className=\"mt-1\">\r\n                    <h6 className=\"text-muted\">Machine Detail</h6>\r\n                    <hr></hr>\r\n                    <span className=\"d-flex justify-content-between\">\r\n                      <strong>Machine:</strong> {business.machine}\r\n                    </span>\r\n                    {sales.length !== 0 && (\r\n                      <>\r\n                        {sales.map((sale) => (\r\n                          <div key={sale.saleId}>\r\n                            {business.machine === \"assigned\" &&\r\n                              (user.userRole === \"client\" ||\r\n                                user.userRole === \"sales\") && (\r\n                                <CButton\r\n                                  variant=\"ghost\"\r\n                                  color=\"danger\"\r\n                                  size=\"sm\"\r\n                                  className=\"w-100 mt-3\"\r\n                                  to={`/business/return-machine/${sale.saleId}`}\r\n                                >\r\n                                  Request to return this machine\r\n                                </CButton>\r\n                              )}\r\n                            {business.machine === \"returning\" &&\r\n                              user.userRole === \"branch-admin\" && (\r\n                                <CButton\r\n                                  variant=\"ghost\"\r\n                                  color=\"success\"\r\n                                  size=\"sm\"\r\n                                  className=\"w-100 mt-3\"\r\n                                >\r\n                                  Confirm Return\r\n                                </CButton>\r\n                              )}\r\n                          </div>\r\n                        ))}{\" \"}\r\n                      </>\r\n                    )}\r\n                  </CCol>\r\n                  <CCol sm=\"12\" md=\"4\" lg=\"3\" className=\"mt-1\">\r\n                    <h6 className=\"text-muted\">Technician Detail</h6>\r\n                    <hr></hr>\r\n                    <span className=\"d-flex justify-content-between\">\r\n                      <strong>Technician:</strong> {business.sw_Tech}\r\n                    </span>\r\n                  </CCol>\r\n                  <CCol sm=\"12\" md=\"4\" lg=\"3\" className=\"mt-1\">\r\n                    <h6 className=\"text-muted\">Branch</h6>\r\n                    <hr></hr>\r\n                    {branchs\r\n                      .filter(\r\n                        (filteredBranch) =>\r\n                          filteredBranch._id === business.branch\r\n                      )\r\n                      .map((branch) => (\r\n                        <div key={branch._id}>\r\n                          <span className=\"d-flex justify-content-between\">\r\n                            <strong>Branch Name:</strong> {branch.branchName}\r\n                          </span>\r\n                          <span className=\"d-flex justify-content-between\">\r\n                            <strong>City:</strong> {branch.city}\r\n                          </span>\r\n                          <span className=\"d-flex justify-content-between\">\r\n                            <strong>Telephone:</strong> {branch.telephone}\r\n                          </span>\r\n                          <span className=\"d-flex justify-content-between\">\r\n                            <strong>Email:</strong> {branch.email}\r\n                          </span>\r\n                        </div>\r\n                      ))}\r\n                  </CCol>\r\n                </CRow>\r\n              </CTabPane>\r\n              <CTabPane>\r\n                <CImg\r\n                  className=\"w-100\"\r\n                  src={business.TL_Image}\r\n                  alt={business.businessName}\r\n                />\r\n              </CTabPane>\r\n            </CTabContent>\r\n          </CTabs>\r\n        </CCardBody>\r\n\r\n        {/* Reject business Request modal */}\r\n        <CModal\r\n          show={showRejectBusinessModal}\r\n          onClose={() => setShowRejectBusinessModal(!showRejectBusinessModal)}\r\n        >\r\n          <CModalBody>\r\n            <CForm onSubmit={rejectBusinessCredentails}>\r\n              <CCol>\r\n                <CLabel htmlFor=\"textarea-input\">Your message</CLabel>\r\n                <CTextarea\r\n                  id=\"theMessage\"\r\n                  name=\"theMessage\"\r\n                  onChange={onChangeInput}\r\n                  rows=\"4\"\r\n                  placeholder=\"Write something why you are rejecting this request...\"\r\n                  required\r\n                />\r\n              </CCol>\r\n              <CCol className=\"d-flex justify-content-between pt-2\">\r\n                <CButton type=\"submit\" size=\"sm\" variant=\"outline\" color=\"dark\">\r\n                  <CIcon name=\"cil-check-circle\" /> confirm Rejection\r\n                </CButton>\r\n                <CButton\r\n                  size=\"sm\"\r\n                  variant=\"outline\"\r\n                  color=\"danger\"\r\n                  onClick={() =>\r\n                    setShowRejectBusinessModal(!showRejectBusinessModal)\r\n                  }\r\n                >\r\n                  <CIcon name=\"cil-x\" /> Close\r\n                </CButton>\r\n              </CCol>\r\n            </CForm>\r\n          </CModalBody>\r\n        </CModal>\r\n\r\n        {/* Assigne a machine to a business */}\r\n        <CModal\r\n          show={showAssigneMachineModal}\r\n          onClose={() => setShowAssigneMachineModal(!showAssigneMachineModal)}\r\n        >\r\n          <CForm onSubmit={onSubmitAssigneMachine} className=\"m-2\">\r\n            <CCol>\r\n              <CFormGroup>\r\n                <CLabel>Machine you want to assigne to this business</CLabel>\r\n                <CSelect\r\n                  aria-label=\"Default select example\"\r\n                  id=\"machineId\"\r\n                  value={assigneMachine.machineId}\r\n                  onChange={(event) => {\r\n                    setAssigneMachine({\r\n                      ...assigneMachine,\r\n                      machineId: event.target.value,\r\n                    });\r\n                  }}\r\n                  required\r\n                >\r\n                  <option value=\"\">Select machine ...</option>\r\n                  {allMachines\r\n                    .filter(\r\n                      (filteredMachine) =>\r\n                        (filteredMachine.salesStatus === \"unsold\" ||\r\n                          filteredMachine.salesStatus === \"returned\") &&\r\n                        filteredMachine.branch == user.branch\r\n                    )\r\n                    .map((thisMachine) => (\r\n                      <option value={thisMachine._id} key={thisMachine._id}>\r\n                        SER NO: {thisMachine.serialNumber} - Brand:{\" \"}\r\n                        {thisMachine.brand}\r\n                      </option>\r\n                    ))}\r\n                </CSelect>\r\n              </CFormGroup>\r\n            </CCol>\r\n            <CCol className=\"d-flex justify-content-between mt-1\">\r\n              <CButton type=\"submit\" size=\"sm\" variant=\"outline\" color=\"dark\">\r\n                <CIcon name=\"cil-check-circle\" /> Confirm\r\n              </CButton>\r\n              <CButton\r\n                size=\"sm\"\r\n                variant=\"outline\"\r\n                color=\"danger\"\r\n                onClick={() =>\r\n                  setShowAssigneMachineModal(!showAssigneMachineModal)\r\n                }\r\n              >\r\n                <CIcon name=\"cil-x\" /> Close\r\n              </CButton>\r\n            </CCol>\r\n          </CForm>\r\n        </CModal>\r\n      </CCard>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BusinessDetail;\r\n"],"sourceRoot":""}