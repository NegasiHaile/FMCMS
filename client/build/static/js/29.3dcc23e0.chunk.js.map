{"version":3,"sources":["Components/HeaderDropDowns/TheHeaderDropdown.js","Components/HeaderDropDowns/TheHeaderDropdownNotif.js","Components/Footer/PrivateFooter.js","Layouts/Client/_nav.js","Layouts/Client/Sidebar.js","Layouts/Client/routes.js","Layouts/Client/Header.js","Layouts/Client/Contents.js","Layouts/Client/Layout.js"],"names":["TheHeaderDropdown","state","useContext","GlobalState","user","UserAPI","User","logoutUser","a","axios","get","localStorage","removeItem","window","location","href","inNav","className","direction","caret","src","alt","userRole","fName","placement","header","tag","color","to","_id","name","mName","divider","onClick","TheHeaderDropdownNotif","notifications","NotificationAPI","useState","myNotification","setMyNotification","useEffect","unSeenNotifications","filter","filteredNotification","receiverId","status","itemsCount","length","shape","map","notif","subject","PrivateFooter","fixed","target","rel","React","memo","_nav","_tag","icon","customClasses","route","_children","BranchAdminSidbar","dispatch","useDispatch","show","useSelector","sidebarShow","onShowChange","val","type","height","items","navigation","components","CSidebarNavDivider","CSidebarNavDropdown","CSidebarNavItem","CSidebarNavTitle","OpenNewBranch","lazy","BranchDetail","BranchAdminDashBoard","BusinessRegistration","BusinessesList","BusinessDetail","MachineDtail","MachinesList","MaintenanceAnnual","RequestMachineReturn","SendFeedback","routes","path","exact","component","BranchAdminHeader","withSubheader","inHeader","includes","loading","BranchAdminContent","fluid","fallback","idx","render","props","from","ClientLayout"],"mappings":"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","file":"static/js/29.3dcc23e0.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { GlobalState } from \"../../GlobalState\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CBadge,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n  CImg,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\n\r\nconst TheHeaderDropdown = () => {\r\n  const state = useContext(GlobalState);\r\n  const [user] = state.UserAPI.User;\r\n\r\n  const logoutUser = async () => {\r\n    await axios.get(\"/user/logout\");\r\n\r\n    localStorage.removeItem(\"firstLogin\");\r\n\r\n    window.location.href = \"/\";\r\n  };\r\n  return (\r\n    <CDropdown inNav className=\"c-header-nav-items mx-2\" direction=\"down\">\r\n      <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\r\n        <div className=\"c-avatar\">\r\n          <CImg\r\n            src={\"/avatars/admin.jpg\"}\r\n            className=\"c-avatar-img\"\r\n            alt={`${user.userRole}: ${user.fName}`}\r\n          />\r\n        </div>\r\n      </CDropdownToggle>\r\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n        {/* <CDropdownItem header tag=\"div\" color=\"light\" className=\"text-center\">\r\n          <strong>Account</strong>\r\n        </CDropdownItem>\r\n        <CDropdownItem to=\"/dashboard\">\r\n          <CIcon name=\"cil-task\" className=\"mfe-2\" />\r\n          {user.branch}\r\n        </CDropdownItem> */}\r\n        {/* <CDropdownItem>\r\n          <CIcon name=\"cil-comment-square\" className=\"mfe-2\" />\r\n          Comments\r\n          <CBadge color=\"warning\" className=\"mfs-auto\">\r\n            42\r\n          </CBadge>\r\n        </CDropdownItem> */}\r\n        <CDropdownItem header tag=\"div\" color=\"light\" className=\"text-center\">\r\n          <strong>Settings</strong>\r\n        </CDropdownItem>\r\n        <CDropdownItem to={`/user/profile/${user._id}`}>\r\n          <CIcon name=\"cil-user\" className=\"mfe-2\" />\r\n          {user.fName + \" \" + user.mName}\r\n        </CDropdownItem>\r\n        <CDropdownItem to=\"/change_password\">\r\n          <CIcon name=\"cil-settings\" className=\"mfe-2\" />\r\n          Change Password\r\n        </CDropdownItem>\r\n        <CDropdownItem divider />\r\n        <CDropdownItem onClick={logoutUser}>\r\n          <CIcon name=\"cil-lock-locked\" className=\"mfe-2\" />\r\n          Lock Account\r\n        </CDropdownItem>\r\n      </CDropdownMenu>\r\n    </CDropdown>\r\n  );\r\n};\r\n\r\nexport default TheHeaderDropdown;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { GlobalState } from \"../../GlobalState\";\r\nimport {\r\n  CBadge,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n  CProgress,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\n\r\nconst TheHeaderDropdownNotif = () => {\r\n  const state = useContext(GlobalState);\r\n  const [user] = state.UserAPI.User;\r\n  const [notifications] = state.NotificationAPI.notifications;\r\n  const [myNotification, setMyNotification] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    var unSeenNotifications = notifications.filter(\r\n      (filteredNotification) =>\r\n        filteredNotification.receiverId === user._id &&\r\n        filteredNotification.status === 0\r\n    );\r\n    setMyNotification(unSeenNotifications);\r\n  }, [notifications, user]);\r\n\r\n  // console.log(myNotification);\r\n  const itemsCount = myNotification.length;\r\n\r\n  return (\r\n    <CDropdown inNav className=\"c-header-nav-item mx-2\">\r\n      <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\r\n        <CIcon name=\"cil-bell\" />\r\n        {itemsCount !== 0 && (\r\n          <CBadge shape=\"pill\" color=\"danger\">\r\n            {itemsCount}\r\n          </CBadge>\r\n        )}\r\n      </CDropdownToggle>\r\n      {itemsCount !== 0 && (\r\n        <CDropdownMenu placement=\"bottom-end\" className=\"pt-0\">\r\n          <CDropdownItem header tag=\"div\" className=\"text-center\" color=\"light\">\r\n            <strong>You have {itemsCount} notifications</strong>\r\n          </CDropdownItem>\r\n          {myNotification.map((notif) => (\r\n            <CDropdownItem key={notif._id}>\r\n              <CIcon name=\"cil-user-follow\" className=\"mr-2 text-success\" />\r\n              {notif.subject}\r\n            </CDropdownItem>\r\n          ))}\r\n          {/* <CDropdownItem header tag=\"div\" color=\"light\">\r\n          <strong>Server</strong>\r\n        </CDropdownItem>\r\n        <CDropdownItem className=\"d-block\">\r\n          <div className=\"text-uppercase mb-1\">\r\n            <small>\r\n              <b>CPU Usage</b>\r\n            </small>\r\n          </div>\r\n          <CProgress size=\"xs\" color=\"info\" value={25} />\r\n          <small className=\"text-muted\">348 Processes. 1/4 Cores.</small>\r\n        </CDropdownItem>\r\n       */}\r\n        </CDropdownMenu>\r\n      )}{\" \"}\r\n    </CDropdown>\r\n  );\r\n};\r\n\r\nexport default TheHeaderDropdownNotif;\r\n","import React from \"react\";\r\nimport { CFooter } from \"@coreui/react\";\r\n\r\nconst PrivateFooter = () => {\r\n  return (\r\n    <CFooter fixed={false}>\r\n      <div>\r\n        <a\r\n          href=\"http://jupiter-tradingeth.com/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Jupiter-Trading\r\n        </a>\r\n        <span className=\"ml-1\">&copy; 2021 FMCMS.</span>\r\n      </div>\r\n      <div className=\"mfs-auto\">\r\n        <span className=\"mr-1\">Powered by</span>\r\n        <a\r\n          href=\"https://Horizontechict.com\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          HorizonTECH-ICT-Solution\r\n        </a>\r\n      </div>\r\n    </CFooter>\r\n  );\r\n};\r\n\r\nexport default React.memo(PrivateFooter);\r\n","import React from \"react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\n\r\n// const NEW = \"10\";\r\n\r\nconst _nav = [\r\n  {\r\n    _tag: \"CSidebarNavItem\",\r\n    name: \"Home\",\r\n    to: \"/dashboard\",\r\n    icon: <CIcon name=\"cil-home\" customClasses=\"c-sidebar-nav-icon\" />,\r\n    // badge: {\r\n    //   color: \"info\",\r\n    //   text: NEW,\r\n    // },\r\n  },\r\n  {\r\n    _tag: \"CSidebarNavItem\",\r\n    name: \"My Businesses\",\r\n    to: \"/business/list\",\r\n    icon: \"cil-building\",\r\n  },\r\n  {\r\n    _tag: \"CSidebarNavItem\",\r\n    name: \"Available Machines\",\r\n    to: \"/available_machines\",\r\n    icon: \"cil-print\",\r\n  },\r\n  {\r\n    _tag: \"CSidebarNavDropdown\",\r\n    name: \"Maintenance\",\r\n    route: \"/maintenance\",\r\n    icon: \"cil-memory\",\r\n    _children: [\r\n      {\r\n        _tag: \"CSidebarNavItem\",\r\n        name: \"Annual\",\r\n        to: \"/maintenance/annual\",\r\n      },\r\n      {\r\n        _tag: \"CSidebarNavItem\",\r\n        name: \"Incident\",\r\n        to: \"/maintenance/incident\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    _tag: \"CSidebarNavTitle\",\r\n    _children: [\"Others\"],\r\n  },\r\n  {\r\n    _tag: \"CSidebarNavItem\",\r\n    name: \"Jupiter Branchs\",\r\n    to: \"/Branch/List\",\r\n    icon: \"cil-bank\",\r\n  },\r\n\r\n  {\r\n    _tag: \"CSidebarNavItem\",\r\n    name: \"Send Feedback\",\r\n    to: \"/send_feedback\",\r\n    icon: \"cil-speech\",\r\n  },\r\n];\r\n\r\nexport default _nav;\r\n","\r\nimport React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  CCreateElement,\r\n  CSidebar,\r\n  CImg,\r\n  CSidebarBrand,\r\n  CSidebarNav,\r\n  CSidebarNavDivider,\r\n  CSidebarNavTitle,\r\n  CSidebarMinimizer,\r\n  CSidebarNavDropdown,\r\n  CSidebarNavItem,\r\n} from '@coreui/react'\r\n\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n// sidebar nav config\r\nimport navigation from './_nav'\r\n\r\nconst BranchAdminSidbar = () => {\r\n  const dispatch = useDispatch()\r\n  const show = useSelector(state => state.sidebarShow)\r\n\r\n  return (\r\n    <CSidebar\r\n      show={show}\r\n      onShowChange={(val) => dispatch({type: 'set', sidebarShow: val })}\r\n    >\r\n      <CSidebarBrand className=\"d-md-down-none\" to=\"/\">\r\n        <CImg\r\n          className=\"c-sidebar-brand-full\"\r\n          name=\"logo-negative\"\r\n          src=\"/logo/fulllogo.png\"\r\n          height={30}\r\n        />\r\n        <CImg\r\n          className=\"c-sidebar-brand-minimized\"\r\n          name=\"sygnet\"\r\n          height={30}\r\n          src=\"/logo/smalllogo.png\"\r\n        />\r\n      </CSidebarBrand>\r\n      <CSidebarNav>\r\n\r\n        <CCreateElement\r\n          items={navigation}\r\n          components={{\r\n            CSidebarNavDivider,\r\n            CSidebarNavDropdown,\r\n            CSidebarNavItem,\r\n            CSidebarNavTitle\r\n          }}\r\n        />\r\n      </CSidebarNav>\r\n      <CSidebarMinimizer className=\"c-d-md-down-none\"/>\r\n    </CSidebar>\r\n  )\r\n}\r\n\r\nexport default React.memo(BranchAdminSidbar)\r\n","import { lazy } from \"react\";\r\n\r\n// Auth\r\nconst UserProfile = lazy(() => import(\"../../Components/UserAccount/Profile\"));\r\nconst ChangePassword = lazy(() =>\r\n  import(\"../../Components/UserAccount/ChangePassword.js\")\r\n);\r\n\r\n// Jupiter branchs\r\nconst OpenNewBranch = lazy(() => import(\"../../Components/Branch/BranchList\"));\r\nconst BranchDetail = lazy(() => import(\"../../Components/Branch/BranchDetail\"));\r\n\r\n// Dashboards\r\nconst BranchAdminDashBoard = lazy(() =>\r\n  import(\"../../Components/Dashboard/Dashboard.js\")\r\n);\r\n\r\n// Client routes\r\n\r\n// Client business frontend routing\r\nconst BusinessRegistration = lazy(() =>\r\n  import(\"../../Components/Business/BusinessRegistration\")\r\n);\r\nconst BusinessesList = lazy(() =>\r\n  import(\"../../Components/Business/BusinessesList\")\r\n);\r\nconst BusinessDetail = lazy(() =>\r\n  import(\"../../Components/Business/BusinessDetail\")\r\n);\r\n\r\n// Importing of machine related pages\r\nconst MachineDtail = lazy(() =>\r\n  import(\"../../Components/Machine/MachineDtail\")\r\n);\r\nconst MachinesList = lazy(() =>\r\n  import(\"../../Components/Machine/MachinesList\")\r\n);\r\n// Importing of maintenance ralted pages\r\nconst MaintenanceAnnual = lazy(() =>\r\n  import(\"../../Components/Maintenance/MaintenanceAnnual\")\r\n);\r\n// Importing of maintenance ralted pages\r\nconst RequestMachineReturn = lazy(() =>\r\n  import(\"../../Components/MachineReturn/RequestMachineReturn\")\r\n);\r\n// Feedback\r\nconst SendFeedback = lazy(() =>\r\n  import(\"../../Components/Feedback/SendFeedback\")\r\n);\r\n\r\nconst routes = [\r\n  { path: \"/\", exact: true, name: \"Client\" },\r\n  {\r\n    path: \"/dashboard\",\r\n    exact: true,\r\n    name: \"Dashboard\",\r\n    component: BranchAdminDashBoard,\r\n  },\r\n  // Branchs\r\n  {\r\n    path: \"/Branch/List\",\r\n    exact: true,\r\n    name: \"Jupter-Trading-Branchs\",\r\n    component: OpenNewBranch,\r\n  },\r\n  {\r\n    path: \"/Branch/Detail/:id\",\r\n    exact: true,\r\n    name: \"Branch-Detail\",\r\n    component: BranchDetail,\r\n  },\r\n  // Client bussiness\r\n  {\r\n    path: \"/business/register\",\r\n    exact: true,\r\n    name: \"Register-Business\",\r\n    component: BusinessRegistration,\r\n  },\r\n  {\r\n    path: \"/business/list\",\r\n    exact: true,\r\n    name: \"Business-List\",\r\n    component: BusinessesList,\r\n  },\r\n  {\r\n    path: \"/business/detail/:id\",\r\n    exact: true,\r\n    name: \"Register-Business\",\r\n    component: BusinessDetail,\r\n  },\r\n  // Machine\r\n  {\r\n    path: \"/available_machines\",\r\n    exact: true,\r\n    name: \"Available-Machines\",\r\n    component: MachineDtail,\r\n  },\r\n  {\r\n    path: \"/machines/list\",\r\n    exact: true,\r\n    name: \"Machines-List\",\r\n    component: MachinesList,\r\n  },\r\n  // Maintenance\r\n  {\r\n    path: \"/maintenance/annual\",\r\n    exact: true,\r\n    name: \"Annual-Maintenance\",\r\n    component: MaintenanceAnnual,\r\n  },\r\n\r\n  // Machine returning\r\n  {\r\n    path: \"/business/return-machine/:salesId\",\r\n    exact: true,\r\n    name: \"Request-Return-Machine\",\r\n    component: RequestMachineReturn,\r\n  },\r\n\r\n  // Feedback\r\n  {\r\n    path: \"/send_feedback\",\r\n    exact: true,\r\n    name: \"Send-Feedback\",\r\n    component: SendFeedback,\r\n  },\r\n  // Account\r\n  {\r\n    path: \"/change_password\",\r\n    exact: true,\r\n    name: \"Change-Password\",\r\n    component: SendFeedback,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { GlobalState } from \"../../GlobalState\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  CHeader,\r\n  CToggler,\r\n  CImg,\r\n  CHeaderBrand,\r\n  CHeaderNav,\r\n  CHeaderNavItem,\r\n  CHeaderNavLink,\r\n  CSubheader,\r\n  CBreadcrumbRouter,\r\n  CLink,\r\n} from \"@coreui/react\";\r\n\r\nimport CIcon from \"@coreui/icons-react\";\r\n\r\n// routes config\r\nimport routes from \"./routes\";\r\n\r\nimport TheHeaderDropdown from \"../../Components/HeaderDropDowns/TheHeaderDropdown\";\r\nimport TheHeaderDropdownNotif from \"../../Components/HeaderDropDowns/TheHeaderDropdownNotif\";\r\n\r\nconst BranchAdminHeader = () => {\r\n  const state = useContext(GlobalState);\r\n  const [user] = state.UserAPI.User;\r\n\r\n  const dispatch = useDispatch();\r\n  const sidebarShow = useSelector((state) => state.sidebarShow);\r\n\r\n  const toggleSidebar = () => {\r\n    const val = [true, \"responsive\"].includes(sidebarShow)\r\n      ? false\r\n      : \"responsive\";\r\n    dispatch({ type: \"set\", sidebarShow: val });\r\n  };\r\n\r\n  const toggleSidebarMobile = () => {\r\n    const val = [false, \"responsive\"].includes(sidebarShow)\r\n      ? true\r\n      : \"responsive\";\r\n    dispatch({ type: \"set\", sidebarShow: val });\r\n  };\r\n\r\n  return (\r\n    <CHeader withSubheader>\r\n      <CToggler\r\n        inHeader\r\n        className=\"ml-md-3 d-lg-none\"\r\n        onClick={toggleSidebarMobile}\r\n      />\r\n      <CToggler\r\n        inHeader\r\n        className=\"ml-3 d-md-down-none\"\r\n        onClick={toggleSidebar}\r\n      />\r\n      <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\r\n        <CImg name=\"logo\" height=\"30\" src=\"/logo/fulllogo.png\" alt=\"Logo\" />\r\n      </CHeaderBrand>\r\n\r\n      <CHeaderNav className=\"d-md-down-none mr-auto\">\r\n        <CHeaderNavItem className=\"px-3\">\r\n          <CHeaderNavLink to=\"/dashboard\">Open-Thicket</CHeaderNavLink>\r\n        </CHeaderNavItem>\r\n        <CHeaderNavItem className=\"px-3\">\r\n          <CHeaderNavLink to=\"/machines/list\">Machines</CHeaderNavLink>\r\n        </CHeaderNavItem>\r\n      </CHeaderNav>\r\n\r\n      <CHeaderNav className=\"px-3\">\r\n        <TheHeaderDropdownNotif />\r\n        <TheHeaderDropdown />\r\n      </CHeaderNav>\r\n\r\n      <CSubheader className=\"px-3 justify-content-between\">\r\n        <CBreadcrumbRouter\r\n          className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\"\r\n          routes={routes}\r\n        />\r\n        <div className=\"d-md-down-none mfe-2 c-subheader-nav\">\r\n          <CLink className=\"c-subheader-nav-link\" to=\"/send_feedback\">\r\n            <CIcon name=\"cil-speech\" alt=\"Feedback\" />\r\n          </CLink>\r\n        </div>\r\n      </CSubheader>\r\n    </CHeader>\r\n  );\r\n};\r\n\r\nexport default BranchAdminHeader;\r\n","import React, { Suspense } from 'react'\r\nimport {\r\n  Redirect,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom'\r\nimport { CContainer, CFade } from '@coreui/react'\r\n\r\n// routes config\r\nimport routes from './routes'\r\n  \r\nconst loading = (\r\n  <div className=\"pt-3 text-center\">\r\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\r\n  </div>\r\n)\r\n\r\nconst BranchAdminContent = () => {\r\n  return (\r\n    <main className=\"c-main\">\r\n      <CContainer fluid>\r\n        <Suspense fallback={loading}>\r\n          <Switch>\r\n            {routes.map((route, idx) => {\r\n              return route.component && (\r\n                <Route\r\n                  key={idx}\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  name={route.name}\r\n                  render={props => (\r\n                    <CFade>\r\n                      <route.component {...props} />\r\n                    </CFade>\r\n                  )} />\r\n              )\r\n            })}\r\n            <Redirect from=\"/\" to=\"/dashboard\" />\r\n          </Switch>\r\n        </Suspense>\r\n      </CContainer>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default React.memo(BranchAdminContent)\r\n\r\n","import React from \"react\";\r\nimport ClientSidbar from \"./Sidebar\";\r\n\r\nimport ClientHeader from \"./Header\";\r\n\r\nimport ClientContent from \"./Contents\";\r\n\r\nimport PrivateFooter from \"../../Components/Footer/PrivateFooter\";\r\n\r\nconst ClientLayout = () => {\r\n  return (\r\n    <div className=\"c-app c-default-layout\">\r\n      <ClientSidbar />\r\n      <div className=\"c-wrapper\">\r\n        <ClientHeader />\r\n        <div className=\"c-body\">\r\n          <ClientContent />\r\n        </div>\r\n        <PrivateFooter />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientLayout;\r\n"],"sourceRoot":""}