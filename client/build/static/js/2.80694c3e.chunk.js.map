{"version":3,"sources":["Components/Branch/BranchList.js"],"names":["branchDetail","branchName","city","subCity","kebele","woreda","buildingName","officeNumber","telephone","email","BranchList","state","useContext","GlobalState","user","UserAPI","User","token","useState","branch","setBranch","branchs","branchAPI","callback","setCallback","activeBranch","setActiveBranch","showModal","setShowModal","onChangeInput","e","target","name","value","sweetAlert","type","text","Swal","fire","position","background","icon","confirmButtonColor","showConfirmButton","onSubmitOpenBranch","a","preventDefault","axios","post","res","data","msg","response","editBranchDetail","put","headers","Authorization","deleteBranch","_id","title","showCancelButton","cancelButtonColor","confirmButtonText","then","result","isConfirmed","delete","error","className","userRole","size","color","onClick","items","fields","tableFilter","itemsPerPageSelect","itemsPerPage","hover","cleaner","sorter","pagination","scopedSlots","Actions","content","to","show","onClose","closeButton","onSubmit","xs","id","placeholder","onChange","required","md"],"mappings":"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","file":"static/js/2.80694c3e.chunk.js","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { GlobalState } from \"../../GlobalState\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CLabel,\r\n  CForm,\r\n  CRow,\r\n  CCol,\r\n  CFormGroup,\r\n  CInput,\r\n  CDataTable,\r\n  CLink,\r\n  CTooltip,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst branchDetail = {\r\n  branchName: \"\",\r\n  city: \"\",\r\n  subCity: \"\",\r\n  kebele: \"\",\r\n  woreda: \"\",\r\n  buildingName: \"\",\r\n  officeNumber: \"\",\r\n  telephone: \"\",\r\n  email: \"\",\r\n};\r\n\r\nconst BranchList = () => {\r\n  const state = useContext(GlobalState);\r\n  const [user] = state.UserAPI.User;\r\n  const [token] = state.token;\r\n  const [branch, setBranch] = useState(branchDetail);\r\n  const [branchs] = state.branchAPI.branchs;\r\n  const [callback, setCallback] = state.branchAPI.callback;\r\n  const [activeBranch, setActiveBranch] = useState(\"none\");\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const onChangeInput = (e) => {\r\n    const { name, value } = e.target;\r\n    setBranch({ ...branch, [name]: value });\r\n  };\r\n\r\n  const sweetAlert = (type, text) => {\r\n    Swal.fire({\r\n        position: \"center\",\r\n        background: \"#EBEDEF\", // 2EB85C success // E55353 danger // 1E263C sidebar\r\n        icon: type,\r\n        text: text,\r\n        confirmButtonColor: \"#3C4B64\",\r\n        showConfirmButton: true,\r\n        // timer: 1500,\r\n      });\r\n  }\r\n\r\n  const onSubmitOpenBranch = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(\"/branch/open_new\", { ...branch });\r\n      sweetAlert(\"success\", res.data.msg)\r\n      setShowModal(!showModal);\r\n      setCallback(!callback);\r\n    } catch (error) {\r\n      sweetAlert(\"error\", error.response.data.msg)\r\n    }\r\n  };\r\n\r\n  const editBranchDetail = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.put(\r\n        `/branch/edit/${activeBranch}`,\r\n        { ...branch },\r\n        {\r\n          headers: { Authorization: token },\r\n        }\r\n      );\r\n      sweetAlert(\"success\", res.data.msg)\r\n      setShowModal(!showModal);\r\n      setCallback(!callback);\r\n    } catch (error) {\r\n      sweetAlert(\"error\", error.response.data.msg)\r\n    }\r\n  };\r\n\r\n  const deleteBranch = async (_id, branchName) => {\r\n    try {\r\n      Swal.fire({\r\n        title: \"Delete?\",\r\n        text: \"You won't be able to revert this!\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#1E263C\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, delete it!\",\r\n      }).then(async (result) => {\r\n        if (result.isConfirmed) {\r\n          const res = await axios.delete(`/branch/delete/${_id}`, {\r\n            headers: { Authorization: token },\r\n          });\r\n          Swal.fire(\"Deleted!\", res.data.msg, \"success\");\r\n          setCallback(!callback);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      sweetAlert(\"error\", error.response.data.msg)\r\n    }\r\n  };\r\n\r\n  const branchTableFields = [\r\n    \"branchName\",\r\n    \"city\",\r\n    \"subCity\",\r\n    \"kebele\",\r\n    \"woreda\",\r\n    \"buildingName\",\r\n    \"officeNumber\",\r\n    \"telephone\",\r\n    \"Actions\",\r\n  ];\r\n  return (\r\n    <>\r\n      <CCard className=\" shadow-sm\">\r\n        <CCardHeader className=\"d-flex justify-content-between\">\r\n          <CLabel>Jupiter Branhcs</CLabel>\r\n          {user.userRole === \"super-admin\" && <CButton\r\n            size=\"sm\"\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              setBranch({ branch, ...branchDetail });\r\n              setActiveBranch(\"none\");\r\n              setShowModal(!showModal);\r\n            }}\r\n          >\r\n            <CIcon name=\"cil-plus\" /> Open branch\r\n          </CButton>}\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CDataTable\r\n            items={branchs}\r\n            fields={branchTableFields}\r\n            tableFilter\r\n            itemsPerPageSelect\r\n            itemsPerPage={5}\r\n            hover\r\n            cleaner\r\n            sorter\r\n            pagination\r\n            scopedSlots={{\r\n              Actions: (branch) => (\r\n                <td className=\"d-flex justify-content-between\">\r\n                  { user.userRole === \"super-admin\" && <> <CLink\r\n                    className=\"text-success\"\r\n                    onClick={() => {\r\n                      setBranch({ branch, ...branch });\r\n                      setActiveBranch(branch._id);\r\n                      setShowModal(!showModal);\r\n                    }}\r\n                  >\r\n                    <CTooltip\r\n                      content={`Edit the  - ${branch.branchName}- branch detail.`}\r\n                    >\r\n                      <CIcon name=\"cil-pencil\" />\r\n                    </CTooltip>\r\n                  </CLink>\r\n\r\n                  <span className=\"text-muted\">|</span>\r\n\r\n                  <CLink\r\n                    className=\"text-danger\"\r\n                    onClick={() => deleteBranch(branch._id)}\r\n                  >\r\n                    <CTooltip\r\n                      content={`Delete - ${branch.branchName}- branch.`}\r\n                    >\r\n                      <CIcon name=\"cil-trash\" />\r\n                    </CTooltip>\r\n                  </CLink>\r\n\r\n                  <span className=\"text-muted\">|</span> </>}\r\n\r\n                  <CLink\r\n                    className=\"text-primary\"\r\n                    to={`/Branch/Detail/${branch._id}`}\r\n                  >\r\n                    <CTooltip\r\n                      content={`See detail of - ${branch.branchName}- branch.`}\r\n                    >\r\n                      <CIcon name=\"cil-fullscreen\" />\r\n                    </CTooltip>\r\n                  </CLink>\r\n                </td>\r\n              ),\r\n            }}\r\n          />\r\n        </CCardBody>\r\n\r\n        <CModal\r\n          size=\"lg\"\r\n          show={showModal}\r\n          onClose={() => setShowModal(!showModal)}\r\n        >\r\n          <CModalHeader closeButton>\r\n            <CModalTitle>Open-New-Branch</CModalTitle>\r\n          </CModalHeader>\r\n          <CForm onSubmit={onSubmitOpenBranch}>\r\n            <CModalBody>\r\n              <CRow>\r\n                <CCol xs=\"12\">\r\n                  <CFormGroup>\r\n                    Branch Name\r\n                    <CInput\r\n                      id=\"branchName\"\r\n                      name=\"branchName\"\r\n                      placeholder=\"Enter branch unique name.\"\r\n                      value={branch.branchName}\r\n                      onChange={onChangeInput}\r\n                      required\r\n                    />\r\n                  </CFormGroup>\r\n                </CCol>\r\n\r\n                <CCol xs=\"12\" md=\"4\">\r\n                  <CFormGroup>\r\n                    Address City\r\n                    <CInput\r\n                      id=\"city\"\r\n                      name=\"city\"\r\n                      placeholder=\"enter the branch city\"\r\n                      value={branch.city}\r\n                      onChange={onChangeInput}\r\n                      required\r\n                    />\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"4\">\r\n                  <CFormGroup>\r\n                    Sub city\r\n                    <CInput\r\n                      id=\"subCity\"\r\n                      name=\"subCity\"\r\n                      placeholder=\"Enter sub city.\"\r\n                      value={branch.subCity}\r\n                      onChange={onChangeInput}\r\n                      required\r\n                    />\r\n                  </CFormGroup>\r\n                </CCol>\r\n\r\n                <CCol xs=\"12\" md=\"4\">\r\n                  <CFormGroup>\r\n                    Kebele\r\n                    <CInput\r\n                      id=\"kebele\"\r\n                      name=\"kebele\"\r\n                      placeholder=\"Enter kebele.\"\r\n                      value={branch.kebele}\r\n                      onChange={onChangeInput}\r\n                    />\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"4\">\r\n                  <CFormGroup>\r\n                    Woreda\r\n                    <CInput\r\n                      id=\"woreda\"\r\n                      name=\"woreda\"\r\n                      placeholder=\"Enter woreda.\"\r\n                      value={branch.woreda}\r\n                      onChange={onChangeInput}\r\n                    />\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"4\">\r\n                  <CFormGroup>\r\n                    Building Name\r\n                    <CInput\r\n                      id=\"buildingName\"\r\n                      name=\"buildingName\"\r\n                      placeholder=\"Enter building name.\"\r\n                      value={branch.buildingName}\r\n                      onChange={onChangeInput}\r\n                    />\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"4\">\r\n                  <CFormGroup>\r\n                    Office Number\r\n                    <CInput\r\n                      id=\"officeNumber\"\r\n                      name=\"officeNumber\"\r\n                      placeholder=\"Enter office number\"\r\n                      value={branch.officeNumber}\r\n                      onChange={onChangeInput}\r\n                    />\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"6\">\r\n                  <CFormGroup>\r\n                    Telephone\r\n                    <CInput\r\n                      id=\"telephone\"\r\n                      name=\"telephone\"\r\n                      placeholder=\"Enter branch telephone\"\r\n                      value={branch.telephone}\r\n                      onChange={onChangeInput}\r\n                      required\r\n                    />\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"6\">\r\n                  <CFormGroup>\r\n                    Email\r\n                    <CInput\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Enter branch email\"\r\n                      value={branch.email}\r\n                      onChange={onChangeInput}\r\n                    />\r\n                  </CFormGroup>\r\n                </CCol>\r\n              </CRow>\r\n            </CModalBody>\r\n            <CModalFooter>\r\n              {activeBranch === \"none\" ? (\r\n                <CButton type=\"submit\" size=\"sm\" color=\"success\">\r\n                  <CIcon name=\"cil-save\" /> Open Branch\r\n                </CButton>\r\n              ) : (\r\n                <CButton size=\"sm\" color=\"dark\" onClick={editBranchDetail}>\r\n                  <CIcon name=\"cil-pencil\" /> Save Changes\r\n                </CButton>\r\n              )}\r\n              <CButton\r\n                size=\"sm\"\r\n                color=\"danger\"\r\n                onClick={() => setShowModal(!showModal)}\r\n              >\r\n                <CIcon name=\"cil-x\" /> Close\r\n              </CButton>\r\n            </CModalFooter>\r\n          </CForm>\r\n        </CModal>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BranchList;\r\n"],"sourceRoot":""}