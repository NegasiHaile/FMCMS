{"version":3,"sources":["Components/Client/RegisterClient.js"],"names":["branchTableFields","RegisterClient","state","useContext","GlobalState","token","user","UserAPI","User","UsersAPI","users","useState","clients","setClients","callback","setCallback","showModal","setShowModal","activeClientID","setActiveClientID","clientDetail","fName","mName","lName","gender","photo","branch","phoneNumber","email","userRole","client","setClient","useEffect","filter","filteredClient","onChangeInput","e","target","name","value","sweetAlert","type","text","Swal","fire","position","background","icon","confirmButtonColor","showConfirmButton","onSubmitRegisterClient","a","preventDefault","axios","post","headers","Authorization","res","data","msg","response","editClientDetail","put","deleteClient","_id","title","showCancelButton","cancelButtonColor","confirmButtonText","then","result","isConfirmed","delete","error","className","size","color","onClick","items","fields","tableFilter","columnFilter","itemsPerPageSelect","itemsPerPage","hover","cleaner","sorter","pagination","scopedSlots","Actions","content","to","show","onClose","closeButton","onSubmit","xs","md","id","onChange","required"],"mappings":"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","file":"static/js/12.2cfef29d.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { GlobalState } from \"../../GlobalState\";\r\n\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CLabel,\r\n  CForm,\r\n  CSelect,\r\n  CRow,\r\n  CCol,\r\n  CFormGroup,\r\n  CInput,\r\n  CDataTable,\r\n  CLink,\r\n  CTooltip,\r\n} from \"@coreui/react\";\r\n\r\nconst branchTableFields = [\r\n  \"fName\",\r\n  \"mName\",\r\n  \"lName\",\r\n  \"gender\",\r\n  \"phoneNumber\",\r\n  \"email\",\r\n  \"Actions\",\r\n];\r\n\r\nfunction RegisterClient() {\r\n  const state = useContext(GlobalState);\r\n  const [token] = state.token;\r\n  const [user] = state.UserAPI.User;\r\n  const [users, setUsers] = state.UsersAPI.users;\r\n  const [clients, setClients] = useState(users);\r\n  const [callback, setCallback] = state.UsersAPI.callback;\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [activeClientID, setActiveClientID] = useState(\"none\");\r\n  const clientDetail = {\r\n    fName: \"\",\r\n    mName: \"\",\r\n    lName: \"\",\r\n    gender: \"\",\r\n    photo: \"/public/images/ng.png\",\r\n    branch: user.branch,\r\n    phoneNumber: \"\",\r\n    email: \"\",\r\n    userRole: \"client\",\r\n  };\r\n  const [client, setClient] = useState(clientDetail);\r\n\r\n  useEffect(() => {\r\n    setClients(\r\n      users.filter(\r\n        (filteredClient) =>\r\n          filteredClient.userRole === \"client\" &&\r\n          filteredClient.branch === user.branch\r\n      )\r\n    );\r\n  }, [users]);\r\n\r\n  const onChangeInput = (e) => {\r\n    const { name, value } = e.target;\r\n    setClient({ ...client, [name]: value });\r\n  };\r\n\r\n  const sweetAlert = (type, text) => {\r\n    Swal.fire({\r\n      position: \"center\",\r\n      background: \"#EBEDEF\", // 2EB85C success // E55353 danger // 1E263C sidebar\r\n      icon: type,\r\n      text: text,\r\n      confirmButtonColor: \"#3C4B64\",\r\n      showConfirmButton: true,\r\n      // timer: 1500,\r\n    });\r\n  };\r\n\r\n  const onSubmitRegisterClient = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(\r\n        \"/user/register\",\r\n        { ...client },\r\n        {\r\n          headers: { Authorization: token },\r\n        }\r\n      );\r\n      sweetAlert(\"success\", res.data.msg);\r\n      setShowModal(!showModal);\r\n      setCallback(!callback);\r\n    } catch (error) {\r\n      sweetAlert(\"error\", error.response.data.msg);\r\n    }\r\n  };\r\n\r\n  const editClientDetail = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.put(\r\n        `/user/edit/${activeClientID}`,\r\n        { ...client },\r\n        {\r\n          headers: { Authorization: token },\r\n        }\r\n      );\r\n      sweetAlert(\"success\", res.data.msg);\r\n      setShowModal(!showModal);\r\n      setCallback(!callback);\r\n    } catch (error) {\r\n      sweetAlert(\"error\", error.response.data.msg);\r\n    }\r\n  };\r\n\r\n  const deleteClient = async (_id, fName, mName) => {\r\n    try {\r\n      Swal.fire({\r\n        title: \"Delete?\",\r\n        text: \"You won't be able to revert this!\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#1E263C\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, delete it!\",\r\n      }).then(async (result) => {\r\n        if (result.isConfirmed) {\r\n          const res = await axios.delete(`/user/delete/${_id}`, {\r\n            headers: { Authorization: token },\r\n          });\r\n          Swal.fire(\"Deleted!\", res.data.msg, \"success\");\r\n          setCallback(!callback);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      sweetAlert(\"error\", error.response.data.msg);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <CCard className=\" shadow-sm\">\r\n        <CCardHeader className=\"d-flex justify-content-between\">\r\n          {user.userRole === \"branch-admin\" || user.userRole === \"sales\" ? (\r\n            <h6 className=\"text-muted\">\r\n              Clients/Business-owners under this branch.\r\n            </h6>\r\n          ) : (\r\n            <h6 className=\"text-muted\">List of all clients.</h6>\r\n          )}\r\n          {user.userRole === \"sales\" && (\r\n            <CButton\r\n              size=\"sm\"\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                setClient({ client, ...clientDetail });\r\n                setActiveClientID(\"none\");\r\n                setShowModal(!showModal);\r\n              }}\r\n            >\r\n              <CIcon name=\"cil-plus\" /> Add Business Owner\r\n            </CButton>\r\n          )}\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CDataTable\r\n            items={clients}\r\n            fields={branchTableFields}\r\n            tableFilter\r\n            columnFilter\r\n            itemsPerPageSelect\r\n            itemsPerPage={10}\r\n            hover\r\n            cleaner\r\n            sorter\r\n            pagination\r\n            scopedSlots={{\r\n              Actions: (client) => (\r\n                <td className=\"d-flex justify-content-between\">\r\n                  {user.userRole === \"sales\" && (\r\n                    <>\r\n                      <CLink\r\n                        className=\"text-success\"\r\n                        onClick={() => {\r\n                          setActiveClientID(client._id);\r\n                          setClient({ client, ...client });\r\n                          setShowModal(!showModal);\r\n                        }}\r\n                      >\r\n                        <CTooltip\r\n                          content={`Edit the  - ${client.fName} ${client.mName}- client detail.`}\r\n                        >\r\n                          <CIcon name=\"cil-pencil\" />\r\n                        </CTooltip>\r\n                      </CLink>\r\n                      <span className=\"text-muted\">|</span>\r\n                      <CLink\r\n                        className=\"text-danger\"\r\n                        onClick={() =>\r\n                          deleteClient(client._id, client.fName, client.mName)\r\n                        }\r\n                      >\r\n                        <CTooltip\r\n                          content={`Delete - ${client.fName} ${client.mName}- client.`}\r\n                        >\r\n                          <CIcon name=\"cil-trash\" />\r\n                        </CTooltip>\r\n                      </CLink>\r\n                      <span className=\"text-muted\">|</span>{\" \"}\r\n                    </>\r\n                  )}\r\n\r\n                  <CLink\r\n                    className=\"text-primary\"\r\n                    to={`/client/detail/${client._id}`}\r\n                  >\r\n                    <CTooltip\r\n                      content={`See detail of - ${client.fName} ${client.mName}- client.`}\r\n                    >\r\n                      <CIcon name=\"cil-fullscreen\" />\r\n                    </CTooltip>\r\n                  </CLink>\r\n                </td>\r\n              ),\r\n            }}\r\n          ></CDataTable>\r\n        </CCardBody>\r\n\r\n        <CModal\r\n          size=\"lg\"\r\n          show={showModal}\r\n          onClose={() => setShowModal(!showModal)}\r\n        >\r\n          <CModalHeader closeButton>\r\n            <CModalTitle className=\"text-muted\">\r\n              Give access to a client\r\n            </CModalTitle>\r\n          </CModalHeader>\r\n          <CForm onSubmit={onSubmitRegisterClient}>\r\n            <CModalBody>\r\n              <CRow>\r\n                <CCol xs=\"12\" md=\"4\">\r\n                  <CFormGroup>\r\n                    First name\r\n                    <CInput\r\n                      id=\"fName\"\r\n                      name=\"fName\"\r\n                      onChange={onChangeInput}\r\n                      value={client.fName}\r\n                      required\r\n                    />\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"4\">\r\n                  <CFormGroup>\r\n                    Middle Name\r\n                    <CInput\r\n                      id=\"mName\"\r\n                      name=\"mName\"\r\n                      onChange={onChangeInput}\r\n                      value={client.mName}\r\n                      required\r\n                    />\r\n                  </CFormGroup>\r\n                </CCol>\r\n\r\n                <CCol xs=\"12\" md=\"4\">\r\n                  <CFormGroup>\r\n                    Last Name\r\n                    <CInput\r\n                      id=\"lName\"\r\n                      name=\"lName\"\r\n                      onChange={onChangeInput}\r\n                      value={client.lName}\r\n                    />\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"3\">\r\n                  <CFormGroup>\r\n                    Gender\r\n                    <CSelect\r\n                      aria-label=\"Default select example\"\r\n                      id=\"gender\"\r\n                      name=\"gender\"\r\n                      onChange={onChangeInput}\r\n                      value={client.gender}\r\n                      required\r\n                    >\r\n                      <option value=\"\">Select gender</option>\r\n                      <option value=\"Male\">Male</option>\r\n                      <option value=\"Female\">Fmale</option>\r\n                    </CSelect>\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"5\">\r\n                  <CFormGroup>\r\n                    Email\r\n                    <CInput\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      onChange={onChangeInput}\r\n                      value={client.email}\r\n                      required\r\n                    />\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"12\" md=\"4\">\r\n                  <CFormGroup>\r\n                    Phone-number\r\n                    <CInput\r\n                      id=\"phoneNumber\"\r\n                      name=\"phoneNumber\"\r\n                      onChange={onChangeInput}\r\n                      value={client.phoneNumber}\r\n                      required\r\n                    />\r\n                  </CFormGroup>\r\n                </CCol>\r\n              </CRow>\r\n            </CModalBody>\r\n            <CModalFooter>\r\n              {activeClientID === \"none\" ? (\r\n                <CButton type=\"submit\" size=\"sm\" color=\"success\">\r\n                  <CIcon name=\"cil-save\" /> Register Client\r\n                </CButton>\r\n              ) : (\r\n                <CButton onClick={editClientDetail} size=\"sm\" color=\"success\">\r\n                  <CIcon name=\"cil-save\" /> Save Change\r\n                </CButton>\r\n              )}\r\n              <CButton\r\n                size=\"sm\"\r\n                color=\"danger\"\r\n                onClick={() => setShowModal(!showModal)}\r\n              >\r\n                <CIcon name=\"cil-x\" /> Close\r\n              </CButton>\r\n            </CModalFooter>\r\n          </CForm>\r\n        </CModal>\r\n      </CCard>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RegisterClient;\r\n"],"sourceRoot":""}