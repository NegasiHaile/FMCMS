{"version":3,"sources":["Components/Business/BusinessesList.js"],"names":["BusinessesList","state","useContext","GlobalState","user","token","UserAPI","User","allAusinesses","BusinessAPI","businesses","useState","setBusinesses","callback","setCallback","useEffect","userRole","filter","filteredBussiness","branch","ownerID","_id","deleteBusiness","tradeName","a","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","axios","delete","res","data","msg","error","type","response","position","background","showConfirmButton","className","size","color","to","name","items","fields","tableFilter","columnFilter","itemsPerPageSelect","itemsPerPage","hover","footer","cleaner","sorter","pagination","scopedSlots","Actions","business","machine","pathname","content","TIN","onClick"],"mappings":"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","file":"static/js/5.14d751cb.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { GlobalState } from \"../../GlobalState\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CLabel,\r\n  CDataTable,\r\n  CLink,\r\n  CTooltip,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\n\r\nconst BusinessesList = () => {\r\n  const state = useContext(GlobalState);\r\n  const [token] = state.token;\r\n  const [user] = state.UserAPI.User;\r\n  const [allAusinesses] = state.BusinessAPI.businesses;\r\n  const [businesses, setBusinesses] = useState(allAusinesses);\r\n  const [callback, setCallback] = state.BusinessAPI.callback;\r\n\r\n  useEffect(() => {\r\n    if (\r\n      user.userRole === \"branch-admin\" ||\r\n      user.userRole === \"technician\" ||\r\n      user.userRole === \"sales\"\r\n    ) {\r\n      setBusinesses(\r\n        allAusinesses.filter(\r\n          (filteredBussiness) => filteredBussiness.branch == user.branch\r\n        )\r\n      );\r\n    } else if (user.userRole === \"client\") {\r\n      setBusinesses(\r\n        allAusinesses.filter(\r\n          (filteredBussiness) => filteredBussiness.ownerID == user._id\r\n        )\r\n      );\r\n    } else {\r\n      setBusinesses(allAusinesses);\r\n    }\r\n  }, [user, allAusinesses]);\r\n  const sweetAlert = (type, text) => {\r\n    Swal.fire({\r\n      position: \"center\",\r\n      background: \"#EBEDEF\", // 2EB85C success // E55353 danger // 1E263C sidebar\r\n      icon: type,\r\n      text: text,\r\n      confirmButtonColor: \"#3C4B64\",\r\n      showConfirmButton: true,\r\n      // timer: 1500,\r\n    });\r\n  };\r\n  const deleteBusiness = async (_id, tradeName) => {\r\n    try {\r\n      Swal.fire({\r\n        title: \"Delete?\",\r\n        text: \"You won't be able to revert \" + tradeName + \" Detail!\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#1E263C\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Yes, delete it!\",\r\n      }).then(async (result) => {\r\n        if (result.isConfirmed) {\r\n          const res = await axios.delete(`/business/delete/${_id}`);\r\n          Swal.fire(\"Deleted!\", res.data.msg, \"success\");\r\n          setCallback(!callback);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      sweetAlert(\"error\", error.response.data.msg);\r\n    }\r\n  };\r\n\r\n  const businessTableFields = [\r\n    \"companyName\",\r\n    \"tradeName\",\r\n    \"TIN\",\r\n    \"VAT\",\r\n    \"telephone\",\r\n    \"credentials\",\r\n    \"machine\",\r\n    \"Actions\",\r\n  ];\r\n  return (\r\n    <>\r\n      <CCard className=\" shadow-sm\">\r\n        <CCardHeader className=\"d-flex justify-content-between\">\r\n          {user.userRole === \"branch-admin\" ||\r\n          user.userRole === \"technician\" ? (\r\n            <h6 className=\"text-muted\">Businesses under this branch.</h6>\r\n          ) : (\r\n            <h6 className=\"text-muted\">List of all businesses.</h6>\r\n          )}\r\n          {user.userRole === \"client\" && (\r\n            <CButton size=\"sm\" color=\"secondary\" to={`/business/register`}>\r\n              <CIcon name=\"cil-plus\" /> Add new business\r\n            </CButton>\r\n          )}\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CDataTable\r\n            items={businesses}\r\n            fields={businessTableFields}\r\n            tableFilter\r\n            columnFilter\r\n            itemsPerPageSelect\r\n            itemsPerPage={10}\r\n            hover\r\n            footer\r\n            cleaner\r\n            sorter\r\n            pagination\r\n            scopedSlots={{\r\n              Actions: (business) => (\r\n                <td className=\"d-flex justify-content-between\">\r\n                  {(user.userRole === \"sales\" || user.userRole === \"client\") &&\r\n                    business.machine === \"unassigned\" && (\r\n                      <>\r\n                        {\" \"}\r\n                        <CLink\r\n                          className=\"text-success\"\r\n                          to={{\r\n                            pathname: `/business/edit/${business._id}`,\r\n                            state: business,\r\n                          }}\r\n                        >\r\n                          <CTooltip\r\n                            content={`Edit the  - ${business.TIN}- business detail.`}\r\n                          >\r\n                            <CIcon name=\"cil-pencil\" />\r\n                          </CTooltip>\r\n                        </CLink>\r\n                        <span className=\"text-muted\">|</span>\r\n                        <CLink\r\n                          className=\"text-danger\"\r\n                          onClick={() =>\r\n                            deleteBusiness(business._id, business.tradeName)\r\n                          }\r\n                        >\r\n                          <CTooltip\r\n                            content={`Delete - ${business.tradeName}- business.`}\r\n                          >\r\n                            <CIcon name=\"cil-trash\" />\r\n                          </CTooltip>\r\n                        </CLink>\r\n                        <span className=\"text-muted\">|</span>{\" \"}\r\n                      </>\r\n                    )}\r\n\r\n                  <CLink\r\n                    className=\"text-primary\"\r\n                    to={`/business/Detail/${business._id}`}\r\n                  >\r\n                    <CTooltip\r\n                      content={`See detail of - ${business.tradeName}- business.`}\r\n                    >\r\n                      <CIcon name=\"cil-fullscreen\" />\r\n                    </CTooltip>\r\n                  </CLink>\r\n                </td>\r\n              ),\r\n            }}\r\n          />\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BusinessesList;\r\n"],"sourceRoot":""}